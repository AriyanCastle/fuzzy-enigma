"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[153],{5212:function(e,t,i){var o,n,r=i(3454);/**
 * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. 
 * @summary Record audio, video or screen inside the browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTC
 * @class
 * @example
 * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {
 *     type: 'video', // audio or video or gif or canvas
 *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc
 * });
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}
 */function a(e,t){if(!e)throw"First parameter is required.";t=t||{type:"video"};var i,o=this;function n(o){o&&(t.initCallback=function(){o(),o=t.initCallback=null}),(i=new new s(e,t)(e,t)).record(),l("recording"),t.disableLogs||console.log("Initialized recorderType:",i.constructor.name,"for output-type:",t.type)}function r(e){if(e=e||function(){},!i){g();return}if("paused"===o.state){o.resumeRecording(),setTimeout(function(){r(e)},1);return}function n(n){if(!i){"function"==typeof e.call?e.call(o,""):e("");return}Object.keys(i).forEach(function(e){"function"!=typeof i[e]&&(o[e]=i[e])});var r,a=i.blob;if(!a){if(n)i.blob=a=n;else throw"Recording failed."}if(a&&!t.disableLogs&&console.log(a.type,"->",R(a.size)),e){try{r=m.createObjectURL(a)}catch(e){}"function"==typeof e.call?e.call(o,r):e(r)}t.autoWriteToDisk&&u(function(e){var i={};i[t.type+"Blob"]=e,E.Store(i)})}"recording"===o.state||t.disableLogs||console.warn('Recording state should be: "recording", however current state is: ',o.state),t.disableLogs||console.log("Stopped recording "+t.type+" stream."),"gif"!==t.type?i.stop(n):(i.stop(),n()),l("stopped")}function c(e){postMessage(new FileReaderSync().readAsDataURL(e))}function u(e,o){if(!e)throw"Pass a callback function over getDataURL.";var n=o?o.blob:(i||{}).blob;if(!n){t.disableLogs||console.warn("Blob encoder did not finish its job yet."),setTimeout(function(){u(e,o)},1e3);return}if("undefined"==typeof Worker||navigator.mozGetUserMedia){var r=new FileReader;r.readAsDataURL(n),r.onload=function(t){e(t.target.result)}}else{var a=function(e){try{var t=m.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (eee) {"+e.name+"(eee.data);}"],{type:"application/javascript"})),i=new Worker(t);return m.revokeObjectURL(t),i}catch(e){}}(c);a.onmessage=function(t){e(t.data)},a.postMessage(n)}}function f(e){if(e=e||0,"paused"===o.state){setTimeout(function(){f(e)},1e3);return}if("stopped"!==o.state){if(e>=o.recordingDuration){r(o.onRecordingStopped);return}e+=1e3,setTimeout(function(){f(e)},1e3)}}function l(e){o&&(o.state=e,"function"==typeof o.onStateChanged.call?o.onStateChanged.call(o,e):o.onStateChanged(e))}var h='It seems that recorder is destroyed or "startRecording" is not invoked for '+(t=new d(e,t)).type+" recorder.";function g(){!0!==t.disableLogs&&console.warn(h)}var p={startRecording:function(r){return(t.disableLogs||console.log("RecordRTC version: ",o.version),r&&(t=new d(e,r)),t.disableLogs||console.log("started recording "+t.type+" stream."),i)?(i.clearRecordedData(),i.record(),l("recording"),o.recordingDuration&&f(),o):(n(function(){o.recordingDuration&&f()}),o)},stopRecording:r,pauseRecording:function(){if(!i){g();return}if("recording"!==o.state){t.disableLogs||console.warn("Unable to pause the recording. Recording state: ",o.state);return}l("paused"),i.pause(),t.disableLogs||console.log("Paused recording.")},resumeRecording:function(){if(!i){g();return}if("paused"!==o.state){t.disableLogs||console.warn("Unable to resume the recording. Recording state: ",o.state);return}l("recording"),i.resume(),t.disableLogs||console.log("Resumed recording.")},initRecorder:n,setRecordingDuration:function(e,t){if(void 0===e)throw"recordingDuration is required.";if("number"!=typeof e)throw"recordingDuration must be a number.";return o.recordingDuration=e,o.onRecordingStopped=t||function(){},{onRecordingStopped:function(e){o.onRecordingStopped=e}}},clearRecordedData:function(){if(!i){g();return}i.clearRecordedData(),t.disableLogs||console.log("Cleared old recorded data.")},getBlob:function(){if(!i){g();return}return i.blob},getDataURL:u,toURL:function(){if(!i){g();return}return m.createObjectURL(i.blob)},getInternalRecorder:function(){return i},save:function(e){if(!i){g();return}S(i.blob,e)},getFromDisk:function(e){if(!i){g();return}a.getFromDisk(t.type,e)},setAdvertisementArray:function(e){t.advertisement=[];for(var i=e.length,o=0;o<i;o++)t.advertisement.push({duration:o,image:e[o]})},blob:null,bufferSize:0,sampleRate:0,buffer:null,reset:function(){"recording"!==o.state||t.disableLogs||console.warn("Stop an active recorder."),i&&"function"==typeof i.clearRecordedData&&i.clearRecordedData(),i=null,l("inactive"),o.blob=null},onStateChanged:function(e){t.disableLogs||console.log("Recorder state changed:",e)},state:"inactive",getState:function(){return o.state},destroy:function(){var e=t.disableLogs;t={disableLogs:!0},o.reset(),l("destroyed"),p=o=null,L.AudioContextConstructor&&(L.AudioContextConstructor.close(),L.AudioContextConstructor=null),t.disableLogs=e,t.disableLogs||console.log("RecordRTC is destroyed.")},version:"5.6.2"};if(!this)return o=p,p;for(var v in p)this[v]=p[v];return o=this,p}/**
 * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.
 * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid "config" object.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCConfiguration
 * @class
 * @example
 * var options = RecordRTCConfiguration(mediaStream, options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}
 */function d(e,t){return t.recorderType||t.type||(t.audio&&t.video?t.type="video":!t.audio||t.video||(t.type="audio")),t.recorderType&&!t.type&&(t.recorderType===x||t.recorderType===U||void 0!==P&&t.recorderType===P?t.type="video":t.recorderType===I?t.type="gif":t.recorderType===D?t.type="audio":t.recorderType===A&&(C(e,"audio").length&&C(e,"video").length?t.type="video":!C(e,"audio").length&&C(e,"video").length?t.type="video":C(e,"audio").length&&!C(e,"video").length&&(t.type="audio"))),void 0!==A&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(t.mimeType||(t.mimeType="video/webm"),t.type||(t.type=t.mimeType.split("/")[0]),t.bitsPerSecond),t.type||(t.mimeType&&(t.type=t.mimeType.split("/")[0]),t.type||(t.type="audio")),t}/**
 * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.
 * @summary It returns best recorder-type available for your browser.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GetRecorderType
 * @class
 * @example
 * var RecorderType = GetRecorderType(options);
 * var recorder = new RecorderType(options);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {type:"video", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 */function s(e,t){var i;return(b||g||p)&&(i=D),"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&!b&&(i=A),"video"===t.type&&(b||p)&&(i=x,void 0!==P&&"undefined"!=typeof ReadableStream&&(i=P)),"gif"===t.type&&(i=I),"canvas"===t.type&&(i=U),M()&&i!==U&&i!==I&&"undefined"!=typeof MediaRecorder&&"requestData"in MediaRecorder.prototype&&(C(e,"video").length||C(e,"audio").length)&&("audio"===t.type?"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("audio/webm")&&(i=A):"function"==typeof MediaRecorder.isTypeSupported&&MediaRecorder.isTypeSupported("video/webm")&&(i=A)),e instanceof Array&&e.length&&(i=F),t.recorderType&&(i=t.recorderType),!t.disableLogs&&i&&i.name&&console.log("Using recorderType:",i.name||i.constructor.name),!i&&w&&(i=A),i}/**
 * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.
 * @summary MRecordRTC stands for "Multiple-RecordRTC".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MRecordRTC
 * @class
 * @example
 * var recorder = new MRecordRTC();
 * recorder.addStream(MediaStream);
 * recorder.mediaType = {
 *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder
 *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder
 *     gif: true    // or GifRecorder
 * };
 * // mimeType is optional and should be set only in advance cases.
 * recorder.mimeType = {
 *     audio: 'audio/wav',
 *     video: 'video/webm',
 *     gif:   'image/gif'
 * };
 * recorder.startRecording();
 * @see For further information:
 * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @requires {@link RecordRTC}
 */function c(e){this.addStream=function(t){t&&(e=t)},this.mediaType={audio:!0,video:!0},this.startRecording=function(){var t,i=this.mediaType,o=this.mimeType||{audio:null,video:null,gif:null};if("function"!=typeof i.audio&&M()&&!C(e,"audio").length&&(i.audio=!1),"function"!=typeof i.video&&M()&&!C(e,"video").length&&(i.video=!1),"function"!=typeof i.gif&&M()&&!C(e,"video").length&&(i.gif=!1),!i.audio&&!i.video&&!i.gif)throw"MediaStream must have either audio or video tracks.";if(i.audio&&(t=null,"function"==typeof i.audio&&(t=i.audio),this.audioRecorder=new a(e,{type:"audio",bufferSize:this.bufferSize,sampleRate:this.sampleRate,numberOfAudioChannels:this.numberOfAudioChannels||2,disableLogs:this.disableLogs,recorderType:t,mimeType:o.audio,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp}),i.video||this.audioRecorder.startRecording()),i.video){t=null,"function"==typeof i.video&&(t=i.video);var n=e;if(M()&&i.audio&&"function"==typeof i.audio){var r=C(e,"video")[0];v?((n=new y).addTrack(r),t&&t===x&&(t=A)):(n=new y).addTrack(r)}this.videoRecorder=new a(n,{type:"video",video:this.video,canvas:this.canvas,frameInterval:this.frameInterval||10,disableLogs:this.disableLogs,recorderType:t,mimeType:o.video,timeSlice:this.timeSlice,onTimeStamp:this.onTimeStamp,workerPath:this.workerPath,webAssemblyPath:this.webAssemblyPath,frameRate:this.frameRate,bitrate:this.bitrate}),i.audio||this.videoRecorder.startRecording()}if(i.audio&&i.video){var d=this,s=!0===M();i.audio instanceof D&&i.video?s=!1:!0!==i.audio&&!0!==i.video&&i.audio!==i.video&&(s=!1),!0===s?(d.audioRecorder=null,d.videoRecorder.startRecording()):d.videoRecorder.initRecorder(function(){d.audioRecorder.initRecorder(function(){d.videoRecorder.startRecording(),d.audioRecorder.startRecording()})})}i.gif&&(t=null,"function"==typeof i.gif&&(t=i.gif),this.gifRecorder=new a(e,{type:"gif",frameRate:this.frameRate||200,quality:this.quality||10,disableLogs:this.disableLogs,recorderType:t,mimeType:o.gif}),this.gifRecorder.startRecording())},this.stopRecording=function(e){e=e||function(){},this.audioRecorder&&this.audioRecorder.stopRecording(function(t){e(t,"audio")}),this.videoRecorder&&this.videoRecorder.stopRecording(function(t){e(t,"video")}),this.gifRecorder&&this.gifRecorder.stopRecording(function(t){e(t,"gif")})},this.pauseRecording=function(){this.audioRecorder&&this.audioRecorder.pauseRecording(),this.videoRecorder&&this.videoRecorder.pauseRecording(),this.gifRecorder&&this.gifRecorder.pauseRecording()},this.resumeRecording=function(){this.audioRecorder&&this.audioRecorder.resumeRecording(),this.videoRecorder&&this.videoRecorder.resumeRecording(),this.gifRecorder&&this.gifRecorder.resumeRecording()},this.getBlob=function(e){var t={};return this.audioRecorder&&(t.audio=this.audioRecorder.getBlob()),this.videoRecorder&&(t.video=this.videoRecorder.getBlob()),this.gifRecorder&&(t.gif=this.gifRecorder.getBlob()),e&&e(t),t},this.destroy=function(){this.audioRecorder&&(this.audioRecorder.destroy(),this.audioRecorder=null),this.videoRecorder&&(this.videoRecorder.destroy(),this.videoRecorder=null),this.gifRecorder&&(this.gifRecorder.destroy(),this.gifRecorder=null)},this.getDataURL=function(e){function t(e,t){if("undefined"!=typeof Worker){var i=function(e){var t,i=m.createObjectURL(new Blob([e.toString(),"this.onmessage =  function (eee) {"+e.name+"(eee.data);}"],{type:"application/javascript"})),o=new Worker(i);if(void 0!==m)t=m;else if("undefined"!=typeof webkitURL)t=webkitURL;else throw"Neither URL nor webkitURL detected.";return t.revokeObjectURL(i),o}(function(e){postMessage(new FileReaderSync().readAsDataURL(e))});i.onmessage=function(e){t(e.data)},i.postMessage(e)}else{var o=new FileReader;o.readAsDataURL(e),o.onload=function(e){t(e.target.result)}}}this.getBlob(function(i){i.audio&&i.video?t(i.audio,function(o){t(i.video,function(t){e({audio:o,video:t})})}):i.audio?t(i.audio,function(t){e({audio:t})}):i.video&&t(i.video,function(t){e({video:t})})})},this.writeToDisk=function(){a.writeToDisk({audio:this.audioRecorder,video:this.videoRecorder,gif:this.gifRecorder})},this.save=function(e){(e=e||{audio:!0,video:!0,gif:!0}).audio&&this.audioRecorder&&this.audioRecorder.save("string"==typeof e.audio?e.audio:""),e.video&&this.videoRecorder&&this.videoRecorder.save("string"==typeof e.video?e.video:""),e.gif&&this.gifRecorder&&this.gifRecorder.save("string"==typeof e.gif?e.gif:"")}}a.version="5.6.2",e.exports=a,void 0!==(n=(function(){return a}).apply(t,[]))&&(e.exports=n),a.getFromDisk=function(e,t){if(!t)throw"callback is mandatory.";console.log("Getting recorded "+("all"===e?"blobs":e+" blob ")+" from disk!"),E.Fetch(function(i,o){"all"!==e&&o===e+"Blob"&&t&&t(i),"all"===e&&t&&t(i,o.replace("Blob",""))})},a.writeToDisk=function(e){console.log("Writing recorded blob(s) to disk!"),(e=e||{}).audio&&e.video&&e.gif?e.audio.getDataURL(function(t){e.video.getDataURL(function(i){e.gif.getDataURL(function(e){E.Store({audioBlob:t,videoBlob:i,gifBlob:e})})})}):e.audio&&e.video?e.audio.getDataURL(function(t){e.video.getDataURL(function(e){E.Store({audioBlob:t,videoBlob:e})})}):e.audio&&e.gif?e.audio.getDataURL(function(t){e.gif.getDataURL(function(e){E.Store({audioBlob:t,gifBlob:e})})}):e.video&&e.gif?e.video.getDataURL(function(t){e.gif.getDataURL(function(e){E.Store({videoBlob:t,gifBlob:e})})}):e.audio?e.audio.getDataURL(function(e){E.Store({audioBlob:e})}):e.video?e.video.getDataURL(function(e){E.Store({videoBlob:e})}):e.gif&&e.gif.getDataURL(function(e){E.Store({gifBlob:e})})},c.getFromDisk=a.getFromDisk,c.writeToDisk=a.writeToDisk,a.MRecordRTC=c,(o=void 0!==i.g?i.g:null)&&"undefined"==typeof window&&void 0!==i.g&&(i.g.navigator={userAgent:"Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45",getUserMedia:function(){}},i.g.console||(i.g.console={}),(void 0===i.g.console.log||void 0===i.g.console.error)&&(i.g.console.error=i.g.console.log=i.g.console.log||function(){console.log(arguments)}),"undefined"==typeof document&&(o.document={documentElement:{appendChild:function(){return""}}},document.createElement=document.captureStream=document.mozCaptureStream=function(){var e={getContext:function(){return e},play:function(){},pause:function(){},drawImage:function(){},toDataURL:function(){return""},style:{}};return e},o.HTMLVideoElement=function(){}),"undefined"==typeof location&&(o.location={protocol:"file:",href:"",hash:""}),"undefined"==typeof screen&&(o.screen={width:0,height:0}),void 0===m&&(o.URL={createObjectURL:function(){return""},revokeObjectURL:function(){return""}}),o.window=i.g);var u=window.requestAnimationFrame;if(void 0===u){if("undefined"!=typeof webkitRequestAnimationFrame)u=webkitRequestAnimationFrame;else if("undefined"!=typeof mozRequestAnimationFrame)u=mozRequestAnimationFrame;else if("undefined"!=typeof msRequestAnimationFrame)u=msRequestAnimationFrame;else if(void 0===u){var f=0;u=function(e,t){var i=new Date().getTime(),o=Math.max(0,16-(i-f)),n=setTimeout(function(){e(i+o)},o);return f=i+o,n}}}var l=window.cancelAnimationFrame;void 0===l&&("undefined"!=typeof webkitCancelAnimationFrame?l=webkitCancelAnimationFrame:"undefined"!=typeof mozCancelAnimationFrame?l=mozCancelAnimationFrame:"undefined"!=typeof msCancelAnimationFrame?l=msCancelAnimationFrame:void 0===l&&(l=function(e){clearTimeout(e)}));var h=window.AudioContext;void 0===h&&("undefined"!=typeof webkitAudioContext&&(h=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(h=mozAudioContext));var m=window.URL;void 0===m&&"undefined"!=typeof webkitURL&&(m=webkitURL),"undefined"!=typeof navigator&&void 0===navigator.getUserMedia&&(void 0!==navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),void 0!==navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var g=-1!==navigator.userAgent.indexOf("Edge")&&(!!navigator.msSaveBlob||!!navigator.msSaveOrOpenBlob),p=!!window.opera||-1!==navigator.userAgent.indexOf("OPR/"),v=navigator.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(navigator.userAgent),b=!p&&!g&&!!navigator.webkitGetUserMedia||k()||-1!==navigator.userAgent.toLowerCase().indexOf("chrome/"),w=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);w&&!b&&-1!==navigator.userAgent.indexOf("CriOS")&&(w=!1,b=!0);var y=window.MediaStream;function R(e){if(0===e)return"0 Bytes";var t=parseInt(Math.floor(Math.log(e)/Math.log(1e3)),10);return(e/Math.pow(1e3,t)).toPrecision(3)+" "+["Bytes","KB","MB","GB","TB"][t]}function S(e,t){if(!e)throw"Blob object is required.";if(!e.type)try{e.type="video/webm"}catch(e){}var i=(e.type||"video/webm").split("/")[1];if(-1!==i.indexOf(";")&&(i=i.split(";")[0]),t&&-1!==t.indexOf(".")){var o=t.split(".");t=o[0],i=o[1]}var n=(t||Math.round(9999999999*Math.random())+888888888)+"."+i;if(void 0!==navigator.msSaveOrOpenBlob)return navigator.msSaveOrOpenBlob(e,n);if(void 0!==navigator.msSaveBlob)return navigator.msSaveBlob(e,n);var r=document.createElement("a");r.href=m.createObjectURL(e),r.download=n,r.style="display:none;opacity:0;color:transparent;",(document.body||document.documentElement).appendChild(r),"function"==typeof r.click?r.click():(r.target="_blank",r.dispatchEvent(new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0}))),m.revokeObjectURL(r.href)}function k(){return!!("undefined"!=typeof window&&"object"==typeof window.process&&"renderer"===window.process.type||void 0!==r&&"object"==typeof r.versions&&r.versions.electron||"object"==typeof navigator&&"string"==typeof navigator.userAgent&&navigator.userAgent.indexOf("Electron")>=0)}function C(e,t){return e&&e.getTracks?e.getTracks().filter(function(e){return e.kind===(t||"audio")}):[]}function T(e,t){"srcObject"in t?t.srcObject=e:"mozSrcObject"in t?t.mozSrcObject=e:t.srcObject=e}void 0===y&&"undefined"!=typeof webkitMediaStream&&(y=webkitMediaStream),void 0!==y&&void 0===y.prototype.stop&&(y.prototype.stop=function(){this.getTracks().forEach(function(e){e.stop()})}),a.invokeSaveAsDialog=S,a.getTracks=C,a.getSeekableBlob=function(e,t){if("undefined"==typeof EBML)throw Error("Please link: https://www.webrtc-experiment.com/EBML.js");var i=new EBML.Reader,o=new EBML.Decoder,n=EBML.tools,r=new FileReader;r.onload=function(e){o.decode(this.result).forEach(function(e){i.read(e)}),i.stop();var r=n.makeMetadataSeekable(i.metadatas,i.duration,i.cues),a=this.result.slice(i.metadataSize);t(new Blob([r,a],{type:"video/webm"}))},r.readAsArrayBuffer(e)},a.bytesToSize=R,a.isElectron=k;/**
 * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. "new AudioContext".
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * Storage.AudioContext === webkitAudioContext
 * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var L={};function M(){if(v||w||g)return!0;navigator.appVersion;var e,t,i=navigator.userAgent,o=""+parseFloat(navigator.appVersion),n=parseInt(navigator.appVersion,10);return(b||p)&&(e=i.indexOf("Chrome"),o=i.substring(e+7)),-1!==(t=o.indexOf(";"))&&(o=o.substring(0,t)),-1!==(t=o.indexOf(" "))&&(o=o.substring(0,t)),isNaN(n=parseInt(""+o,10))&&(o=""+parseFloat(navigator.appVersion),n=parseInt(navigator.appVersion,10)),n>=49}/**
 * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.
 * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://github.com/muaz-khan|Muaz Khan}
 * @typedef MediaStreamRecorder
 * @class
 * @example
 * var config = {
 *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis
 *     audioBitsPerSecond : 256 * 8 * 1024,
 *     videoBitsPerSecond : 256 * 8 * 1024,
 *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two
 *     checkForInactiveTracks: true,
 *     timeSlice: 1000, // concatenate intervals based blobs
 *     ondataavailable: function() {} // get intervals based blobs
 * }
 * var recorder = new MediaStreamRecorder(mediaStream, config);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs:true, initCallback: function, mimeType: "video/webm", timeSlice: 1000}
 * @throws Will throw an error if first argument "MediaStream" is missing. Also throws error if "MediaRecorder API" are not supported by the browser.
 */function A(e,t){var i,o,n=this;if(void 0===e)throw'First argument "MediaStream" is required.';if("undefined"==typeof MediaRecorder)throw"Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.";"audio"===(t=t||{mimeType:"video/webm"}).type&&(C(e,"video").length&&C(e,"audio").length&&(navigator.mozGetUserMedia?(i=new y).addTrack(C(e,"audio")[0]):i=new y(C(e,"audio")),e=i),t.mimeType&&-1!==t.mimeType.toString().toLowerCase().indexOf("audio")||(t.mimeType=b?"audio/webm":"audio/ogg"),t.mimeType&&"audio/ogg"!==t.mimeType.toString().toLowerCase()&&navigator.mozGetUserMedia&&(t.mimeType="audio/ogg"));var r=[];function a(){n.timestamps.push(new Date().getTime()),"function"==typeof t.onTimeStamp&&t.onTimeStamp(n.timestamps[n.timestamps.length-1],n.timestamps)}function d(e){return o&&o.mimeType?o.mimeType:e.mimeType||"video/webm"}function s(){r=[],o=null,n.timestamps=[]}this.getArrayOfBlobs=function(){return r},this.record=function(){n.blob=null,n.clearRecordedData(),n.timestamps=[],c=[],r=[];var i=t;t.disableLogs||console.log("Passing following config over MediaRecorder API.",i),o&&(o=null),b&&!M()&&(i="video/vp8"),"function"==typeof MediaRecorder.isTypeSupported&&i.mimeType&&!MediaRecorder.isTypeSupported(i.mimeType)&&(t.disableLogs||console.warn("MediaRecorder API seems unable to record mimeType:",i.mimeType),i.mimeType="audio"===t.type?"audio/webm":"video/webm");try{o=new MediaRecorder(e,i),t.mimeType=i.mimeType}catch(t){o=new MediaRecorder(e)}i.mimeType&&!MediaRecorder.isTypeSupported&&"canRecordMimeType"in o&&!1===o.canRecordMimeType(i.mimeType)&&!t.disableLogs&&console.warn("MediaRecorder API seems unable to record mimeType:",i.mimeType),o.ondataavailable=function(e){if(e.data&&c.push("ondataavailable: "+R(e.data.size)),"number"==typeof t.timeSlice){if(e.data&&e.data.size&&(r.push(e.data),a(),"function"==typeof t.ondataavailable)){var o=t.getNativeBlob?e.data:new Blob([e.data],{type:d(i)});t.ondataavailable(o)}return}if(!e.data||!e.data.size||e.data.size<100||n.blob){n.recordingCallback&&(n.recordingCallback(new Blob([],{type:d(i)})),n.recordingCallback=null);return}n.blob=t.getNativeBlob?e.data:new Blob([e.data],{type:d(i)}),n.recordingCallback&&(n.recordingCallback(n.blob),n.recordingCallback=null)},o.onstart=function(){c.push("started")},o.onpause=function(){c.push("paused")},o.onresume=function(){c.push("resumed")},o.onstop=function(){c.push("stopped")},o.onerror=function(e){e&&(e.name||(e.name="UnknownError"),c.push("error: "+e),t.disableLogs||(-1!==e.name.toString().toLowerCase().indexOf("invalidstate")?console.error("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.",e):-1!==e.name.toString().toLowerCase().indexOf("notsupported")?console.error("MIME type (",i.mimeType,") is not supported.",e):-1!==e.name.toString().toLowerCase().indexOf("security")?console.error("MediaRecorder security error",e):"OutOfMemory"===e.name?console.error("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"IllegalStreamModification"===e.name?console.error("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"OtherRecordingError"===e.name?console.error("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.",e):"GenericError"===e.name?console.error("The UA cannot provide the codec or recording option that has been requested.",e):console.error("MediaRecorder Error",e)),function(){if(!n.manuallyStopped&&o&&"inactive"===o.state){delete t.timeslice,o.start(6e5);return}setTimeout(void 0,1e3)}(),"inactive"!==o.state&&"stopped"!==o.state&&o.stop())},"number"==typeof t.timeSlice?(a(),o.start(t.timeSlice)):o.start(36e5),t.initCallback&&t.initCallback()},this.timestamps=[],this.stop=function(e){e=e||function(){},n.manuallyStopped=!0,o&&(this.recordingCallback=e,"recording"===o.state&&o.stop(),"number"==typeof t.timeSlice&&setTimeout(function(){n.blob=new Blob(r,{type:d(t)}),n.recordingCallback(n.blob)},100))},this.pause=function(){o&&"recording"===o.state&&o.pause()},this.resume=function(){o&&"paused"===o.state&&o.resume()},this.clearRecordedData=function(){o&&"recording"===o.state&&n.stop(s),s()},this.getInternalRecorder=function(){return o},this.blob=null,this.getState=function(){return o&&o.state||"inactive"};var c=[];this.getAllStates=function(){return c},void 0===t.checkForInactiveTracks&&(t.checkForInactiveTracks=!1);var n=this;!function i(){if(o&&!1!==t.checkForInactiveTracks){if(!1===function(){if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}()){t.disableLogs||console.log("MediaStream seems stopped."),n.stop();return}setTimeout(i,1e3)}}(),this.name="MediaStreamRecorder",this.toString=function(){return this.name}}/**
 * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring "stereo" audio-recording in chrome.
 * @summary JavaScript standalone object for stereo audio recording.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef StereoAudioRecorder
 * @class
 * @example
 * var recorder = new StereoAudioRecorder(MediaStream, {
 *     sampleRate: 44100,
 *     bufferSize: 4096
 * });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}
 */function D(e,t){if(!C(e,"audio").length)throw"Your stream has no audio tracks.";var i,o=this,n=[],r=[],d=!1,s=0,c=2,u=(t=t||{}).desiredSampRate;function f(){if(!1===t.checkForInactiveTracks)return!0;if("active"in e){if(!e.active)return!1}else if("ended"in e&&e.ended)return!1;return!0}function l(e,t){function i(e,t){var i,o=e.numberOfAudioChannels,n=e.leftBuffers.slice(0),r=e.rightBuffers.slice(0),a=e.sampleRate,d=e.internalInterleavedLength,s=e.desiredSampRate;function c(e,t,i){var o=Math.round(e.length*(t/i)),n=[],r=Number((e.length-1)/(o-1));n[0]=e[0];for(var a=1;a<o-1;a++){var d,s=a*r,c=Number(Math.floor(s)).toFixed(),u=Number(Math.ceil(s)).toFixed(),f=s-c;n[a]=(d=e[c],d+(e[u]-d)*f)}return n[o-1]=e[e.length-1],n}function u(e,t){for(var i=new Float64Array(t),o=0,n=e.length,r=0;r<n;r++){var a=e[r];i.set(a,o),o+=a.length}return i}function f(e,t,i){for(var o=i.length,n=0;n<o;n++)e.setUint8(t+n,i.charCodeAt(n))}2===o&&(n=u(n,d),r=u(r,d),s&&(n=c(n,s,a),r=c(r,s,a))),1===o&&(n=u(n,d),s&&(n=c(n,s,a))),s&&(a=s),2===o&&(i=function(e,t){for(var i=e.length+t.length,o=new Float64Array(i),n=0,r=0;r<i;)o[r++]=e[n],o[r++]=t[n],n++;return o}(n,r)),1===o&&(i=n);var l=i.length,h=44+2*l,m=new ArrayBuffer(h),g=new DataView(m);f(g,0,"RIFF"),g.setUint32(4,36+2*l,!0),f(g,8,"WAVE"),f(g,12,"fmt "),g.setUint32(16,16,!0),g.setUint16(20,1,!0),g.setUint16(22,o,!0),g.setUint32(24,a,!0),g.setUint32(28,a*o*2,!0),g.setUint16(32,2*o,!0),g.setUint16(34,16,!0),f(g,36,"data"),g.setUint32(40,2*l,!0);for(var p=44,v=0;v<l;v++)g.setInt16(p,32767*i[v],!0),p+=2;if(t)return t({buffer:m,view:g});postMessage({buffer:m,view:g})}if(e.noWorker){i(e,function(e){t(e.buffer,e.view)});return}var o,n,r=(o=m.createObjectURL(new Blob([i.toString(),";this.onmessage =  function (eee) {"+i.name+"(eee.data);}"],{type:"application/javascript"})),(n=new Worker(o)).workerURL=o,n);r.onmessage=function(e){t(e.data.buffer,e.data.view),m.revokeObjectURL(r.workerURL),r.terminate()},r.postMessage(e)}!0===t.leftChannel&&(c=1),1===t.numberOfAudioChannels&&(c=1),(!c||c<1)&&(c=2),t.disableLogs||console.log("StereoAudioRecorder is set to record number of channels: "+c),void 0===t.checkForInactiveTracks&&(t.checkForInactiveTracks=!0),this.record=function(){if(!1===f())throw"Please make sure MediaStream is active.";y(),S=w=!1,d=!0,void 0!==t.timeSlice&&function e(){d&&"function"==typeof t.ondataavailable&&void 0!==t.timeSlice&&(k.left.length?(l({desiredSampRate:u,sampleRate:b,numberOfAudioChannels:c,internalInterleavedLength:k.recordingLength,leftBuffers:k.left,rightBuffers:1===c?[]:k.right},function(i,o){var n=new Blob([o],{type:"audio/wav"});t.ondataavailable(n),setTimeout(e,t.timeSlice)}),k={left:[],right:[],recordingLength:0}):setTimeout(e,t.timeSlice))}()},this.stop=function(e){e=e||function(){},d=!1,l({desiredSampRate:u,sampleRate:b,numberOfAudioChannels:c,internalInterleavedLength:s,leftBuffers:n,rightBuffers:1===c?[]:r,noWorker:t.noWorker},function(t,i){o.blob=new Blob([i],{type:"audio/wav"}),o.buffer=new ArrayBuffer(i.buffer.byteLength),o.view=i,o.sampleRate=u||b,o.bufferSize=v,o.length=s,S=!1,e&&e(o.blob)})},void 0===a.Storage&&(a.Storage={AudioContextConstructor:null,AudioContext:window.AudioContext||window.webkitAudioContext}),a.Storage.AudioContextConstructor&&"closed"!==a.Storage.AudioContextConstructor.state||(a.Storage.AudioContextConstructor=new a.Storage.AudioContext);var h=a.Storage.AudioContextConstructor,g=h.createMediaStreamSource(e),p=[0,256,512,1024,2048,4096,8192,16384],v=void 0===t.bufferSize?4096:t.bufferSize;if(-1!==p.indexOf(v)||t.disableLogs||console.log("Legal values for buffer-size are "+JSON.stringify(p,null,"	")),h.createJavaScriptNode)i=h.createJavaScriptNode(v,c,c);else if(h.createScriptProcessor)i=h.createScriptProcessor(v,c,c);else throw"WebAudio API has no support on this browser.";g.connect(i),t.bufferSize||(v=i.bufferSize);var b=void 0!==t.sampleRate?t.sampleRate:h.sampleRate||44100;(b<22050||b>96e3)&&!t.disableLogs&&console.log("sample-rate must be under range 22050 and 96000."),!t.disableLogs&&t.desiredSampRate&&console.log("Desired sample-rate: "+t.desiredSampRate);var w=!1;function y(){n=[],r=[],s=0,S=!1,d=!1,w=!1,h=null,o.leftchannel=n,o.rightchannel=r,o.numberOfAudioChannels=c,o.desiredSampRate=u,o.sampleRate=b,o.recordingLength=s,k={left:[],right:[],recordingLength:0}}function R(){i&&(i.onaudioprocess=null,i.disconnect(),i=null),g&&(g.disconnect(),g=null),y()}this.pause=function(){w=!0},this.resume=function(){if(!1===f())throw"Please make sure MediaStream is active.";if(!d){t.disableLogs||console.log("Seems recording has been restarted."),this.record();return}w=!1},this.clearRecordedData=function(){t.checkForInactiveTracks=!1,d&&this.stop(R),R()},this.name="StereoAudioRecorder",this.toString=function(){return this.name};var S=!1;i.onaudioprocess=function(e){if(!w){if(!1===f()&&(t.disableLogs||console.log("MediaStream seems stopped."),i.disconnect(),d=!1),!d){g&&(g.disconnect(),g=null);return}!S&&(S=!0,t.onAudioProcessStarted&&t.onAudioProcessStarted(),t.initCallback&&t.initCallback());var a=e.inputBuffer.getChannelData(0),u=new Float32Array(a);if(n.push(u),2===c){var l=e.inputBuffer.getChannelData(1),h=new Float32Array(l);r.push(h)}s+=v,o.recordingLength=s,void 0!==t.timeSlice&&(k.recordingLength+=v,k.left.push(u),2===c&&k.right.push(h))}},h.createMediaStreamDestination?i.connect(h.createMediaStreamDestination()):i.connect(h.destination),this.leftchannel=n,this.rightchannel=r,this.numberOfAudioChannels=c,this.desiredSampRate=u,this.sampleRate=b,o.recordingLength=s;var k={left:[],right:[],recordingLength:0}}/**
 * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.
 * @summary HTML2Canvas recording into video WebM.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef CanvasRecorder
 * @class
 * @example
 * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.
 * @param {object} config - {disableLogs:true, initCallback: function}
 */function U(e,t){if("undefined"==typeof html2canvas)throw"Please link: https://www.webrtc-experiment.com/screenshot.js";(t=t||{}).frameInterval||(t.frameInterval=10);var i,o,n,r=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(e){e in document.createElement("canvas")&&(r=!0)});var a=(!!window.webkitRTCPeerConnection||!!window.webkitGetUserMedia)&&!!window.chrome,d=50,s=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(a&&s&&s[2]&&(d=parseInt(s[2],10)),a&&d<52&&(r=!1),t.useWhammyRecorder&&(r=!1),r){if(t.disableLogs||console.log("Your browser supports both MediRecorder API and canvas.captureStream!"),e instanceof HTMLCanvasElement)i=e;else if(e instanceof CanvasRenderingContext2D)i=e.canvas;else throw"Please pass either HTMLCanvasElement or CanvasRenderingContext2D."}else navigator.mozGetUserMedia&&!t.disableLogs&&console.error("Canvas recording is NOT supported in Firefox.");this.record=function(){if(n=!0,r&&!t.useWhammyRecorder){var a;"captureStream"in i?a=i.captureStream(25):"mozCaptureStream"in i?a=i.mozCaptureStream(25):"webkitCaptureStream"in i&&(a=i.webkitCaptureStream(25));try{var d=new y;d.addTrack(C(a,"video")[0]),a=d}catch(e){}if(!a)throw"captureStream API are NOT available.";(o=new A(a,{mimeType:t.mimeType||"video/webm"})).record()}else l.frames=[],f=new Date().getTime(),function i(){if(c)return f=new Date().getTime(),setTimeout(i,500);if("canvas"===e.nodeName.toLowerCase()){var o,r,a=new Date().getTime()-f;f=new Date().getTime(),l.frames.push({image:(r=(o=document.createElement("canvas")).getContext("2d"),o.width=e.width,o.height=e.height,r.drawImage(e,0,0),o),duration:a}),n&&setTimeout(i,t.frameInterval);return}html2canvas(e,{grabMouse:void 0===t.showMousePointer||t.showMousePointer,onrendered:function(e){var o=new Date().getTime()-f;if(!o)return setTimeout(i,t.frameInterval);f=new Date().getTime(),l.frames.push({image:e.toDataURL("image/webp",1),duration:o}),n&&setTimeout(i,t.frameInterval)}})}();t.initCallback&&t.initCallback()},this.getWebPImages=function(i){if("canvas"!==e.nodeName.toLowerCase()){i();return}var o=l.frames.length;l.frames.forEach(function(e,i){var n=o-i;t.disableLogs||console.log(n+"/"+o+" frames remaining"),t.onEncodingCallback&&t.onEncodingCallback(n,o);var r=e.image.toDataURL("image/webp",1);l.frames[i].image=r}),t.disableLogs||console.log("Generating WebM"),i()},this.stop=function(e){n=!1;var i=this;if(r&&o){o.stop(e);return}this.getWebPImages(function(){l.compile(function(o){t.disableLogs||console.log("Recording finished!"),i.blob=o,i.blob.forEach&&(i.blob=new Blob([],{type:"video/webm"})),e&&e(i.blob),l.frames=[]})})};var c=!1;function u(){l.frames=[],n=!1,c=!1}this.pause=function(){if(c=!0,o instanceof A){o.pause();return}},this.resume=function(){if(c=!1,o instanceof A){o.resume();return}n||this.record()},this.clearRecordedData=function(){n&&this.stop(u),u()},this.name="CanvasRecorder",this.toString=function(){return this.name};var f=new Date().getTime(),l=new B.Video(100)}/**
 * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.
 * @summary Video recording feature in Chrome.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WhammyRecorder
 * @class
 * @example
 * var recorder = new WhammyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}
 */function x(e,t){(t=t||{}).frameInterval||(t.frameInterval=10),t.disableLogs||console.log("Using frames-interval:",t.frameInterval),this.record=function(){t.width||(t.width=320),t.height||(t.height=240),t.video||(t.video={width:t.width,height:t.height}),t.canvas||(t.canvas={width:t.width,height:t.height}),s.width=t.canvas.width||320,s.height=t.canvas.height||240,c=s.getContext("2d"),t.video&&t.video instanceof HTMLVideoElement?(i=t.video.cloneNode(),t.initCallback&&t.initCallback()):(T(e,i=document.createElement("video")),i.onloadedmetadata=function(){t.initCallback&&t.initCallback()},i.width=t.video.width,i.height=t.video.height),i.muted=!0,i.play(),o=new Date().getTime(),n=new B.Video,t.disableLogs||(console.log("canvas resolutions",s.width,"*",s.height),console.log("video width/height",i.width||s.width,"*",i.height||s.height)),function e(t){t=void 0!==t?t:10;var d=new Date().getTime()-o;return d?a?(o=new Date().getTime(),setTimeout(e,100)):void(o=new Date().getTime(),i.paused&&i.play(),c.drawImage(i,0,0,s.width,s.height),n.frames.push({duration:d,image:s.toDataURL("image/webp")}),r||setTimeout(e,t,t)):setTimeout(e,t,t)}(t.frameInterval)};var i,o,n,r=!1;this.stop=function(e){e=e||function(){},r=!0;var i=this;setTimeout(function(){var o,r,a,d,c,u,f,l,h,m,g,p;o=n.frames,r=function(o){n.frames=o,t.advertisement&&t.advertisement.length&&(n.frames=t.advertisement.concat(n.frames)),n.compile(function(t){i.blob=t,i.blob.forEach&&(i.blob=new Blob([],{type:"video/webm"})),e&&e(i.blob)})},(a=document.createElement("canvas")).width=s.width,a.height=s.height,d=a.getContext("2d"),c=[],u=o.length,f={r:0,g:0,b:0},l=Math.sqrt(195075),h=!1,g=-1,p=(m={length:u,functionToLoop:function(e,t){var i,n,r,a=function(){!h&&r-i<=0*r||(h=!0,c.push(o[t])),e()};if(h)a();else{var u=new Image;u.onload=function(){d.drawImage(u,0,0,s.width,s.height);var e=d.getImageData(0,0,s.width,s.height);i=0,n=e.data.length,r=e.data.length/4;for(var t=0;t<n;t+=4){var o={r:e.data[t],g:e.data[t+1],b:e.data[t+2]};Math.sqrt(Math.pow(o.r-f.r,2)+Math.pow(o.g-f.g,2)+Math.pow(o.b-f.b,2))<=0*l&&i++}a()},u.src=o[t].image}},callback:function(){(c=c.concat(o.slice(u))).length<=0&&c.push(o[o.length-1]),r(c)}}).length,function e(){if(++g===p){m.callback();return}setTimeout(function(){m.functionToLoop(e,g)},1)}()},10)};var a=!1;function d(){n.frames=[],r=!0,a=!1}this.pause=function(){a=!0},this.resume=function(){a=!1,r&&this.record()},this.clearRecordedData=function(){r||this.stop(d),d()},this.name="WhammyRecorder",this.toString=function(){return this.name};var s=document.createElement("canvas"),c=s.getContext("2d")}void 0!==h?L.AudioContext=h:"undefined"!=typeof webkitAudioContext&&(L.AudioContext=webkitAudioContext),a.Storage=L,a.MediaStreamRecorder=A,a.StereoAudioRecorder=D,a.CanvasRecorder=U,a.WhammyRecorder=x;/**
 * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}
 * @summary A real time javascript webm encoder based on a canvas hack.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef Whammy
 * @class
 * @example
 * var recorder = new Whammy().Video(15);
 * recorder.add(context || canvas || dataURL);
 * var output = recorder.compile();
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var B=function(){function e(e){this.frames=[],this.duration=e||1,this.quality=.8}function t(e){function t(e){var t=[];e=(e.length%8?Array(9-e.length%8).join("0"):"")+e;for(var i=0;i<e.length;i+=8)t.push(parseInt(e.substr(i,8),2));return new Uint8Array(t)}var i=new function(e){var i,o=function(e){if(!e[0]){postMessage({error:"Something went wrong. Maybe WebP format is not supported in the current browser."});return}for(var t=e[0].width,i=e[0].height,o=e[0].duration,n=1;n<e.length;n++)o+=e[n].duration;return{duration:o,width:t,height:i}}(e);if(!o)return[];for(var n=[{id:440786851,data:[{data:1,id:17030},{data:1,id:17143},{data:4,id:17138},{data:8,id:17139},{data:"webm",id:17026},{data:2,id:17031},{data:2,id:17029}]},{id:408125543,data:[{id:357149030,data:[{data:1e6,id:2807729},{data:"whammy",id:19840},{data:"whammy",id:22337},{data:(i=o.duration,[].slice.call(new Uint8Array(new Float64Array([i]).buffer),0).map(function(e){return String.fromCharCode(e)}).reverse().join("")),id:17545}]},{id:374648427,data:[{id:174,data:[{data:1,id:215},{data:1,id:29637},{data:0,id:156},{data:"und",id:2274716},{data:"V_VP8",id:134},{data:"VP8",id:2459272},{data:1,id:131},{id:224,data:[{data:o.width,id:176},{data:o.height,id:186}]}]}]}]}],r=0,a=0;r<e.length;){var d=[],s=0;do d.push(e[r]),s+=e[r].duration,r++;while(r<e.length&&s<3e4);var c={id:524531317,data:function(e,t,i){return[{data:e,id:231}].concat(i.map(function(e){var i=function(e){var t=0;if(e.keyframe&&(t|=128),e.invisible&&(t|=8),e.lacing&&(t|=e.lacing<<1),e.discardable&&(t|=1),e.trackNum>127)throw"TrackNumber > 127 not supported";return[128|e.trackNum,e.timecode>>8,255&e.timecode,t].map(function(e){return String.fromCharCode(e)}).join("")+e.frame}({discardable:0,frame:e.data.slice(4),invisible:0,keyframe:1,lacing:0,trackNum:1,timecode:Math.round(t)});return t+=e.duration,{data:i,id:163}}))}(a,0,d)};n[1].data.push(c),a+=s}return function e(i){for(var o=[],n=0;n<i.length;n++){var r,a=i[n].data;"object"==typeof a&&(a=e(a)),"number"==typeof a&&(a=t(a.toString(2))),"string"==typeof a&&(r=a,a=new Uint8Array(r.split("").map(function(e){return e.charCodeAt(0)})));var d=a.size||a.byteLength||a.length,s=Math.ceil(Math.ceil(Math.log(d)/Math.log(2))/8),c=d.toString(2),u=Array(7*s+7+1-c.length).join("0")+c,f=Array(s).join("0")+"1"+u;o.push(function(e){for(var t=[];e>0;)t.push(255&e),e>>=8;return new Uint8Array(t.reverse())}(i[n].id)),o.push(t(f)),o.push(a)}return new Blob(o,{type:"video/webm"})}(n)}(e.map(function(e){var t=function(e){for(var t=e.RIFF[0].WEBP[0],i=t.indexOf("\x9d\x01*"),o=0,n=[];o<4;o++)n[o]=t.charCodeAt(i+3+o);return{width:16383&(n[1]<<8|n[0]),height:16383&(n[3]<<8|n[2]),data:t,riff:e}}(function e(t){for(var i=0,o={};i<t.length;){var n,r=t.substr(i,4),a=(n=i,parseInt(t.substr(n+4,4).split("").map(function(e){var t=e.charCodeAt(0).toString(2);return Array(8-t.length+1).join("0")+t}).join(""),2)),d=t.substr(i+4+4,a);i+=8+a,o[r]=o[r]||[],"RIFF"===r||"LIST"===r?o[r].push(e(d)):o[r].push(d)}return o}(atob(e.image.slice(23))));return t.duration=e.duration,t}));postMessage(i)}return e.prototype.add=function(e,t){if("canvas"in e&&(e=e.canvas),"toDataURL"in e&&(e=e.toDataURL("image/webp",this.quality)),!/^data:image\/webp;base64,/ig.test(e))throw"Input must be formatted properly as a base64 encoded DataURI of type image/webp";this.frames.push({image:e,duration:t||this.duration})},e.prototype.compile=function(e){var i,o,n=(i=m.createObjectURL(new Blob([t.toString(),"this.onmessage =  function (eee) {"+t.name+"(eee.data);}"],{type:"application/javascript"})),o=new Worker(i),m.revokeObjectURL(i),o);n.onmessage=function(t){if(t.data.error){console.error(t.data.error);return}e(t.data)},n.postMessage(this.frames)},{Video:e}}();a.Whammy=B;/**
 * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.
 * @summary Writing blobs into IndexedDB.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @example
 * DiskStorage.Store({
 *     audioBlob: yourAudioBlob,
 *     videoBlob: yourVideoBlob,
 *     gifBlob  : yourGifBlob
 * });
 * DiskStorage.Fetch(function(dataURL, type) {
 *     if(type === 'audioBlob') { }
 *     if(type === 'videoBlob') { }
 *     if(type === 'gifBlob')   { }
 * });
 * // DiskStorage.dataStoreName = 'recordRTC';
 * // DiskStorage.onError = function(error) { };
 * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.
 * @property {function} Fetch - This method fetches stored blobs from IndexedDB.
 * @property {function} Store - This method stores blobs in IndexedDB.
 * @property {function} onError - This function is invoked for any known/unknown error.
 * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 */var E={init:function(){var e=this;if("undefined"==typeof indexedDB||void 0===indexedDB.open){console.error("IndexedDB API are not available in this browser.");return}var t,i=this.dbName||location.href.replace(/\/|:|#|%|\.|\[|\]/g,""),o=indexedDB.open(i,1);function n(t){t.createObjectStore(e.dataStoreName)}function r(){var i=t.transaction([e.dataStoreName],"readwrite");function o(t){i.objectStore(e.dataStoreName).get(t).onsuccess=function(i){e.callback&&e.callback(i.target.result,t)}}e.videoBlob&&i.objectStore(e.dataStoreName).put(e.videoBlob,"videoBlob"),e.gifBlob&&i.objectStore(e.dataStoreName).put(e.gifBlob,"gifBlob"),e.audioBlob&&i.objectStore(e.dataStoreName).put(e.audioBlob,"audioBlob"),o("audioBlob"),o("videoBlob"),o("gifBlob")}o.onerror=e.onError,o.onsuccess=function(){(t=o.result).onerror=e.onError,t.setVersion&&1!==t.version?t.setVersion(1).onsuccess=function(){n(t),r()}:r()},o.onupgradeneeded=function(e){n(e.target.result)}},Fetch:function(e){return this.callback=e,this.init(),this},Store:function(e){return this.audioBlob=e.audioBlob,this.videoBlob=e.videoBlob,this.gifBlob=e.gifBlob,this.init(),this},onError:function(e){console.error(JSON.stringify(e,null,"	"))},dataStoreName:"recordRTC",dbName:null};/**
 * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef GifRecorder
 * @class
 * @example
 * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });
 * recorder.record();
 * recorder.stop(function(blob) {
 *     img.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.
 * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}
 */function I(e,t){if("undefined"==typeof GIFEncoder){var i,o,n=document.createElement("script");n.src="https://www.webrtc-experiment.com/gif-recorder.js",(document.body||document.documentElement).appendChild(n)}t=t||{};var r=e instanceof CanvasRenderingContext2D||e instanceof HTMLCanvasElement;this.record=function(){if("undefined"==typeof GIFEncoder||!c){setTimeout(m.record,1e3);return}r||(t.width||(t.width=f.offsetWidth||320),t.height||(t.height=f.offsetHeight||240),t.video||(t.video={width:t.width,height:t.height}),t.canvas||(t.canvas={width:t.width,height:t.height}),d.width=t.canvas.width||320,d.height=t.canvas.height||240,f.width=t.video.width||320,f.height=t.video.height||240),(o=new GIFEncoder).setRepeat(0),o.setDelay(t.frameRate||200),o.setQuality(t.quality||10),o.start(),"function"==typeof t.onGifRecordingStarted&&t.onGifRecordingStarted(),Date.now(),h=u(function e(n){if(!0!==m.clearedRecordedData){if(a)return setTimeout(function(){e(n)},100);h=u(e),n-i<90||(!r&&f.paused&&f.play(),r||s.drawImage(f,0,0,d.width,d.height),t.onGifPreview&&t.onGifPreview(d.toDataURL("image/png")),o.addFrame(s),i=n)}}),t.initCallback&&t.initCallback()},this.stop=function(e){e=e||function(){},h&&l(h),Date.now(),this.blob=new Blob([new Uint8Array(o.stream().bin)],{type:"image/gif"}),e(this.blob),o.stream().bin=[]};var a=!1;this.pause=function(){a=!0},this.resume=function(){a=!1},this.clearRecordedData=function(){m.clearedRecordedData=!0,o&&(o.stream().bin=[])},this.name="GifRecorder",this.toString=function(){return this.name};var d=document.createElement("canvas"),s=d.getContext("2d");r&&(e instanceof CanvasRenderingContext2D?d=(s=e).canvas:e instanceof HTMLCanvasElement&&(s=e.getContext("2d"),d=e));var c=!0;if(!r){var f=document.createElement("video");f.muted=!0,f.autoplay=!0,f.playsInline=!0,c=!1,f.onloadedmetadata=function(){c=!0},T(e,f),f.play()}var h=null,m=this}function O(e,t){void 0!==i.g&&i.g,t=t||"multi-streams-mixer";var o=[],n=!1,r=document.createElement("canvas"),a=r.getContext("2d");r.style.opacity=0,r.style.position="absolute",r.style.zIndex=-1,r.style.top="-1000em",r.style.left="-1000em",r.className=t,(document.body||document.documentElement).appendChild(r),this.disableLogs=!1,this.frameInterval=10,this.width=360,this.height=240,this.useGainNode=!0;var d=this,s=window.AudioContext;void 0===s&&("undefined"!=typeof webkitAudioContext&&(s=webkitAudioContext),"undefined"!=typeof mozAudioContext&&(s=mozAudioContext));var c=window.URL;void 0===c&&"undefined"!=typeof webkitURL&&(c=webkitURL),"undefined"!=typeof navigator&&void 0===navigator.getUserMedia&&(void 0!==navigator.webkitGetUserMedia&&(navigator.getUserMedia=navigator.webkitGetUserMedia),void 0!==navigator.mozGetUserMedia&&(navigator.getUserMedia=navigator.mozGetUserMedia));var u=window.MediaStream;void 0===u&&"undefined"!=typeof webkitMediaStream&&(u=webkitMediaStream),void 0!==u&&void 0===u.prototype.stop&&(u.prototype.stop=function(){this.getTracks().forEach(function(e){e.stop()})});var f={};function l(e,t){if(!n){var i=0,o=0,r=e.width,d=e.height;1===t&&(i=e.width),2===t&&(o=e.height),3===t&&(i=e.width,o=e.height),4===t&&(o=2*e.height),5===t&&(i=e.width,o=2*e.height),6===t&&(o=3*e.height),7===t&&(i=e.width,o=3*e.height),void 0!==e.stream.left&&(i=e.stream.left),void 0!==e.stream.top&&(o=e.stream.top),void 0!==e.stream.width&&(r=e.stream.width),void 0!==e.stream.height&&(d=e.stream.height),a.drawImage(e,i,o,r,d),"function"==typeof e.stream.onRender&&e.stream.onRender(a,i,o,r,d,t)}}function h(e){var i=document.createElement("video");return"srcObject"in i?i.srcObject=e:"mozSrcObject"in i?i.mozSrcObject=e:i.srcObject=e,i.className=t,i.muted=!0,i.volume=0,i.width=e.width||d.width||360,i.height=e.height||d.height||240,i.play(),i}function m(t){o=[],(t=t||e).forEach(function(e){if(e.getTracks().filter(function(e){return"video"===e.kind}).length){var t=h(e);t.stream=e,o.push(t)}})}void 0!==s?f.AudioContext=s:"undefined"!=typeof webkitAudioContext&&(f.AudioContext=webkitAudioContext),this.startDrawingFrames=function(){!function e(){if(!n){var t=o.length,i=!1,a=[];if(o.forEach(function(e){e.stream||(e.stream={}),e.stream.fullcanvas?i=e:a.push(e)}),i)r.width=i.stream.width,r.height=i.stream.height;else if(a.length){r.width=t>1?2*a[0].width:a[0].width;var s=1;(3===t||4===t)&&(s=2),(5===t||6===t)&&(s=3),(7===t||8===t)&&(s=4),(9===t||10===t)&&(s=5),r.height=a[0].height*s}else r.width=d.width||360,r.height=d.height||240;i&&i instanceof HTMLVideoElement&&l(i),a.forEach(function(e,t){l(e,t)}),setTimeout(e,d.frameInterval)}}()},this.appendStreams=function(t){if(!t)throw"First parameter is required.";t instanceof Array||(t=[t]),t.forEach(function(t){var i=new u;if(t.getTracks().filter(function(e){return"video"===e.kind}).length){var n=h(t);n.stream=t,o.push(n),i.addTrack(t.getTracks().filter(function(e){return"video"===e.kind})[0])}if(t.getTracks().filter(function(e){return"audio"===e.kind}).length){var r=d.audioContext.createMediaStreamSource(t);d.audioDestination=d.audioContext.createMediaStreamDestination(),r.connect(d.audioDestination),i.addTrack(d.audioDestination.stream.getTracks().filter(function(e){return"audio"===e.kind})[0])}e.push(i)})},this.releaseStreams=function(){o=[],n=!0,d.gainNode&&(d.gainNode.disconnect(),d.gainNode=null),d.audioSources.length&&(d.audioSources.forEach(function(e){e.disconnect()}),d.audioSources=[]),d.audioDestination&&(d.audioDestination.disconnect(),d.audioDestination=null),d.audioContext&&d.audioContext.close(),d.audioContext=null,a.clearRect(0,0,r.width,r.height),r.stream&&(r.stream.stop(),r.stream=null)},this.resetVideoStreams=function(e){!e||e instanceof Array||(e=[e]),m(e)},this.name="MultiStreamsMixer",this.toString=function(){return this.name},this.getMixedStream=function(){n=!1;var t,i,o=(m(),"captureStream"in r?t=r.captureStream():"mozCaptureStream"in r?t=r.mozCaptureStream():d.disableLogs||console.error("Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features"),i=new u,t.getTracks().filter(function(e){return"video"===e.kind}).forEach(function(e){i.addTrack(e)}),r.stream=i,i),a=function(){f.AudioContextConstructor||(f.AudioContextConstructor=new f.AudioContext),d.audioContext=f.AudioContextConstructor,d.audioSources=[],!0===d.useGainNode&&(d.gainNode=d.audioContext.createGain(),d.gainNode.connect(d.audioContext.destination),d.gainNode.gain.value=0);var t=0;if(e.forEach(function(e){if(e.getTracks().filter(function(e){return"audio"===e.kind}).length){t++;var i=d.audioContext.createMediaStreamSource(e);!0===d.useGainNode&&i.connect(d.gainNode),d.audioSources.push(i)}}),t)return d.audioDestination=d.audioContext.createMediaStreamDestination(),d.audioSources.forEach(function(e){e.connect(d.audioDestination)}),d.audioDestination.stream}();return a&&a.getTracks().filter(function(e){return"audio"===e.kind}).forEach(function(e){o.addTrack(e)}),e.forEach(function(e){e.fullcanvas}),o}}/**
 * MultiStreamRecorder can record multiple videos in single container.
 * @summary Multi-videos recorder.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef MultiStreamRecorder
 * @class
 * @example
 * var options = {
 *     mimeType: 'video/webm'
 * }
 * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 *
 *     // or
 *     var blob = recorder.blob;
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStreams} mediaStreams - Array of MediaStreams.
 * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: "video/webm"}
 */function F(e,t){e=e||[];var i,o,n=this;(t=t||{elementClass:"multi-streams-mixer",mimeType:"video/webm",video:{width:360,height:240}}).frameInterval||(t.frameInterval=10),t.video||(t.video={}),t.video.width||(t.video.width=360),t.video.height||(t.video.height=240),this.record=function(){var n;i=new O(e,t.elementClass||"multi-streams-mixer"),(n=[],e.forEach(function(e){C(e,"video").forEach(function(e){n.push(e)})}),n).length&&(i.frameInterval=t.frameInterval||10,i.width=t.video.width||360,i.height=t.video.height||240,i.startDrawingFrames()),t.previewStream&&"function"==typeof t.previewStream&&t.previewStream(i.getMixedStream()),(o=new A(i.getMixedStream(),t)).record()},this.stop=function(e){o&&o.stop(function(t){n.blob=t,e(t),n.clearRecordedData()})},this.pause=function(){o&&o.pause()},this.resume=function(){o&&o.resume()},this.clearRecordedData=function(){o&&(o.clearRecordedData(),o=null),i&&(i.releaseStreams(),i=null)},this.addStreams=function(n){if(!n)throw"First parameter is required.";n instanceof Array||(n=[n]),e.concat(n),o&&i&&(i.appendStreams(n),t.previewStream&&"function"==typeof t.previewStream&&t.previewStream(i.getMixedStream()))},this.resetVideoStreams=function(e){i&&(!e||e instanceof Array||(e=[e]),i.resetVideoStreams(e))},this.getMixer=function(){return i},this.name="MultiStreamRecorder",this.toString=function(){return this.name}}/**
 * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.
 * @summary Video recording feature in Chrome, Firefox and maybe Edge.
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef WebAssemblyRecorder
 * @class
 * @example
 * var recorder = new WebAssemblyRecorder(mediaStream);
 * recorder.record();
 * recorder.stop(function(blob) {
 *     video.src = URL.createObjectURL(blob);
 * });
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.
 * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}
 */function P(e,t){("undefined"==typeof ReadableStream||"undefined"==typeof WritableStream)&&console.error("Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js"),(t=t||{}).width=t.width||640,t.height=t.height||480,t.frameRate=t.frameRate||30,t.bitrate=t.bitrate||1200,t.realtime=t.realtime||!0,this.record=function(){r=[],n=!1,this.blob=null,function a(d,s){if(!t.workerPath&&!s){i=!1,fetch("https://unpkg.com/webm-wasm@latest/dist/webm-worker.js").then(function(e){e.arrayBuffer().then(function(e){a(d,e)})});return}if(!t.workerPath&&s instanceof ArrayBuffer){var c=new Blob([s],{type:"text/javascript"});t.workerPath=m.createObjectURL(c)}t.workerPath||console.error("workerPath parameter is missing."),(o=new Worker(t.workerPath)).postMessage(t.webAssemblyPath||"https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm"),o.addEventListener("message",function(a){"READY"===a.data?(o.postMessage({width:t.width,height:t.height,bitrate:t.bitrate||1200,timebaseDen:t.frameRate||30,realtime:t.realtime}),new ReadableStream({start:function(o){var n=document.createElement("canvas"),r=document.createElement("video"),a=!0;r.srcObject=e,r.muted=!0,r.height=t.height,r.width=t.width,r.volume=0,r.onplaying=function(){n.width=t.width,n.height=t.height;var e=n.getContext("2d"),d=setInterval(function(){if(i&&(clearInterval(d),o.close()),a&&(a=!1,t.onVideoProcessStarted&&t.onVideoProcessStarted()),e.drawImage(r,0,0),"closed"!==o._controlledReadableStream.state)try{o.enqueue(e.getImageData(0,0,t.width,t.height))}catch(e){}},1e3/t.frameRate)},r.play()}}).pipeTo(new WritableStream({write:function(e){if(i){console.error("Got image, but recorder is finished!");return}o.postMessage(e.data.buffer,[e.data.buffer])}}))):a.data&&!n&&r.push(a.data)})}(e),"function"==typeof t.initCallback&&t.initCallback()},this.pause=function(){n=!0},this.resume=function(){n=!1};var i,o,n,r=[];this.stop=function(e){i=!0;var t=this;!function(e){if(!o){e&&e();return}o.addEventListener("message",function(t){null===t.data&&(o.terminate(),o=null,e&&e())}),o.postMessage(null)}(function(){t.blob=new Blob(r,{type:"video/webm"}),e(t.blob)})},this.name="WebAssemblyRecorder",this.toString=function(){return this.name},this.clearRecordedData=function(){r=[],n=!1,this.blob=null},this.blob=null}a.DiskStorage=E,a.GifRecorder=I,a.MultiStreamRecorder=F,a.RecordRTCPromisesHandler=/**
 * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}
 * @summary Promises for {@link RecordRTC}
 * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}
 * @author {@link https://MuazKhan.com|Muaz Khan}
 * @typedef RecordRTCPromisesHandler
 * @class
 * @example
 * var recorder = new RecordRTCPromisesHandler(mediaStream, options);
 * recorder.startRecording()
 *         .then(successCB)
 *         .catch(errorCB);
 * // Note: You can access all RecordRTC API using "recorder.recordRTC" e.g. 
 * recorder.recordRTC.onStateChanged = function(state) {};
 * recorder.recordRTC.setRecordingDuration(5000);
 * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}
 * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.
 * @param {object} config - {type:"video", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}
 * @throws Will throw an error if "new" keyword is not used to initiate "RecordRTCPromisesHandler". Also throws error if first argument "MediaStream" is missing.
 * @requires {@link RecordRTC}
 */function(e,t){if(!this)throw'Use "new RecordRTCPromisesHandler()"';if(void 0===e)throw'First argument "MediaStream" is required.';var i=this;i.recordRTC=new a(e,t),this.startRecording=function(){return new Promise(function(e,t){try{i.recordRTC.startRecording(),e()}catch(e){t(e)}})},this.stopRecording=function(){return new Promise(function(e,t){try{i.recordRTC.stopRecording(function(o){if(i.blob=i.recordRTC.getBlob(),!i.blob||!i.blob.size){t("Empty blob.",i.blob);return}e(o)})}catch(e){t(e)}})},this.pauseRecording=function(){return new Promise(function(e,t){try{i.recordRTC.pauseRecording(),e()}catch(e){t(e)}})},this.resumeRecording=function(){return new Promise(function(e,t){try{i.recordRTC.resumeRecording(),e()}catch(e){t(e)}})},this.getDataURL=function(e){return new Promise(function(e,t){try{i.recordRTC.getDataURL(function(t){e(t)})}catch(e){t(e)}})},this.getBlob=function(){return new Promise(function(e,t){try{e(i.recordRTC.getBlob())}catch(e){t(e)}})},this.getInternalRecorder=function(){return new Promise(function(e,t){try{e(i.recordRTC.getInternalRecorder())}catch(e){t(e)}})},this.reset=function(){return new Promise(function(e,t){try{e(i.recordRTC.reset())}catch(e){t(e)}})},this.destroy=function(){return new Promise(function(e,t){try{e(i.recordRTC.destroy())}catch(e){t(e)}})},this.getState=function(){return new Promise(function(e,t){try{e(i.recordRTC.getState())}catch(e){t(e)}})},this.blob=null,this.version="5.6.2"},a.WebAssemblyRecorder=P}}]);